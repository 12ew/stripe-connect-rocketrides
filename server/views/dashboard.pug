extends layout

block content
  .user
    .block.profile
      .photo
      p Pilot since #{moment(pilot.created).format('MMMM YYYY')}
      h1 #{pilot.displayName()}
      .rating
    .block.week
      p This Week
      h1 $#{(ridesTotalAmount / 100).toFixed(2)}
      h2 #{rides.length} Rides
    .block.available
      p Your Balance
      h1 $#{((balanceAvailable + balancePending) / 100).toFixed(2)}
      h2 $#{(balanceAvailable / 100).toFixed(2)} Available
    .block.stripe
      a.button(href='/pilots/stripe/transfers') View Transfers
      form(action='/pilots/stripe/payout', method='POST', autocomplete='off')
        input(type='submit', value='Pay Out Now')
  section.rides
    h4 Recent Rides
    if rides.length == 0
      p No rocket rides to display for the past 7 days. Fly with some passengers!
    else
      .list
        each ride in rides
          .row
            .cell.name= ride.passenger.displayName()
            .cell.date= moment(new Date(Date.parse(ride.created))).calendar()
            .cell.price $#{(ride.amountForPilot() / 100).toFixed(2)}

block footer
  .annotation.simulate
    h4 Simulate a few passenger rides to generate payments to the pilot account. 
    p The balance is automatically fetched from the Stripe API. #[strong View Transfers] lets pilots see their payments and edit their account information. #[strong Pay Out Now] generates an instant payout of the available balance using the Stripe API.
    div.form
      form(action='/pilots/rides', method='POST', autocomplete='off')
        .options
          label
            input(type='radio', name='trigger', value='immediate-balance', checked)
            strong Immediate balance
          label
            input(type='radio', name='trigger', value='account-verification')
            strong Account verification
          label
            input(type='radio', name='trigger', value='payout-limit')
            strong Payout limit
        input(type='submit', value='Simulate Passenger Ride')
